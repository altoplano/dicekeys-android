apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: 'org.jetbrains.dokka'

//https://developer.android.com/studio/publish/app-signing#secure-key
// Create a variable called keystorePropertiesFile, and initialize it to your
// keystore.properties file, in the rootProject folder.
def keystorePropertiesFile = rootProject.file("keystore.properties")

// Initialize a new Properties() object called keystoreProperties.
def keystoreProperties = new Properties()

// Load your keystore.properties file into the keystoreProperties object.
if (keystorePropertiesFile.exists()){
    keystoreProperties.load(new FileInputStream(keystorePropertiesFile))
}

android {
    ndkVersion '21.3.6528147' // Latest LTS

    compileSdkVersion 30
    buildToolsVersion "30.0.3"

    signingConfigs {
        release {
            storeFile keystoreProperties.containsKey("storeFile") ? file(keystoreProperties['storeFile']) : null
            storePassword keystoreProperties.containsKey("storePassword") ? keystoreProperties['storePassword'] : ""
            keyAlias keystoreProperties.containsKey("keyAlias") ? keystoreProperties['keyAlias'] : ""
            keyPassword keystoreProperties.containsKey("keyPassword") ? keystoreProperties['keyPassword'] : ""
        }
    }

    defaultConfig {
        minSdkVersion 21
        targetSdkVersion 29
        versionCode 1
        versionName '0.1.0'

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles 'consumer-rules.pro'

        buildTypes {
            release {
                minifyEnabled false
                proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
                signingConfig signingConfigs.release
            }
            debug {
                debuggable true
                initWith debug
                jniDebuggable true
            }
        }

        externalNativeBuild {
            cmake {
                cppFlags "-std=c++11"    
                //arguments "-DANDROID_STL=c++_shared"
                targets "jni-read-dicekey"

            }
        }
    }

    externalNativeBuild {
        cmake {
            version "3.15.0+"
            path file('src/main/cpp/CMakeLists.txt')
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8.toString()
    }

    viewBinding.enabled = true
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.1'
    testImplementation 'junit:junit:4.13'
    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'

    // CameraX core library using the camera2 implementation
    def camerax_version = '1.0.0-beta10'
    implementation "androidx.camera:camera-camera2:${camerax_version}"
    // If you want to use the CameraX View class
    implementation 'androidx.camera:camera-view:1.0.0-alpha17'
    // If you want to use the CameraX Extensions library
    implementation 'androidx.camera:camera-extensions:1.0.0-alpha17'
    // If you want to use the CameraX Lifecycle library
    implementation "androidx.camera:camera-lifecycle:${camerax_version}"

    implementation 'com.google.zxing:core:3.4.1'

    implementation('com.squareup.moshi:moshi:1.11.0')
    implementation('com.squareup.moshi:moshi-kotlin:1.11.0')
    kapt('com.squareup.moshi:moshi-kotlin-codegen:1.11.0')
    implementation 'androidx.core:core-ktx:1.3.2'
    implementation 'org.jetbrains.kotlin:kotlin-stdlib-jdk7:1.4.10'
    implementation project(path: ':seeded')
    implementation project(path: ':dicekey')
}
